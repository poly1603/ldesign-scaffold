# 多阶段构建 Dockerfile
# 阶段 1: 构建阶段
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制 package 文件
COPY package*.json ./
<% if (buildTool === 'tsup' || buildTool === 'tsc') { %>
COPY tsconfig.json ./
<% } %>

# 安装依赖（包括开发依赖）
RUN npm ci --only=production=false

# 复制源代码
COPY src ./src
<% if (features.includes('database')) { %>
COPY prisma ./prisma
<% } %>

# 构建应用
<% if (buildTool === 'tsup') { %>
RUN npm run build
<% } else if (buildTool === 'tsc') { %>
RUN npm run build
<% } else { %>
RUN npm run build
<% } %>

<% if (features.includes('database')) { %>
# 生成 Prisma 客户端
RUN npx prisma generate
<% } %>

# 阶段 2: 生产阶段
FROM node:18-alpine AS production

# 安装 dumb-init 用于信号处理
RUN apk add --no-cache dumb-init

# 创建非 root 用户
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# 设置工作目录
WORKDIR /app

# 复制 package 文件
COPY package*.json ./

# 只安装生产依赖
RUN npm ci --only=production && npm cache clean --force

# 从构建阶段复制构建产物
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
<% if (features.includes('database')) { %>
COPY --from=builder --chown=nodejs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nodejs:nodejs /app/prisma ./prisma
<% } %>

# 复制其他必要文件
COPY --chown=nodejs:nodejs .env.example ./.env.example

# 创建日志目录
<% if (features.includes('logging')) { %>
RUN mkdir -p logs && chown nodejs:nodejs logs
<% } %>

# 创建上传目录
RUN mkdir -p uploads && chown nodejs:nodejs uploads

# 切换到非 root 用户
USER nodejs

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node dist/healthcheck.js || exit 1

# 启动应用
CMD ["dumb-init", "node", "dist/index.js"]

# 开发阶段（可选）
FROM node:18-alpine AS development

# 安装开发工具
RUN apk add --no-cache git

# 设置工作目录
WORKDIR /app

# 复制 package 文件
COPY package*.json ./
<% if (buildTool === 'tsup' || buildTool === 'tsc') { %>
COPY tsconfig.json ./
<% } %>

# 安装所有依赖
RUN npm install

# 复制源代码
COPY . .

<% if (features.includes('database')) { %>
# 生成 Prisma 客户端
RUN npx prisma generate
<% } %>

# 暴露端口
EXPOSE 3000

# 开发模式启动
CMD ["npm", "run", "dev"]