<% if (features.includes('state-management')) { %>
<template>
  <div :class="containerClasses">
    <div :class="displayClasses">
      计数: {{ count }}
    </div>
    <div :class="buttonsClasses">
      <button
        @click="decrement"
        :class="decrementButtonClasses"
      >
        -1
      </button>
      <button
        @click="reset"
        :class="resetButtonClasses"
      >
        重置
      </button>
      <button
        @click="increment"
        :class="incrementButtonClasses"
      >
        +1
      </button>
    </div>
    <div :class="actionsClasses">
      <button
        @click="incrementBy(5)"
        :class="actionButtonClasses"
      >
        +5
      </button>
      <button
        @click="incrementBy(10)"
        :class="actionButtonClasses"
      >
        +10
      </button>
    </div>
  </div>
</template>

<script setup lang="ts">
import { computed } from 'vue'
import { useCounterStore } from '../stores/counter'

// 使用状态管理
const counterStore = useCounterStore()
const { count, increment, decrement, reset, incrementBy } = counterStore

// 样式类计算属性
const containerClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'flex flex-col items-center space-y-6 p-6 bg-white rounded-lg shadow-md max-w-sm mx-auto'
<% } else { %>
  'counter-container'
<% } %>
)

const displayClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'text-3xl font-bold text-gray-900'
<% } else { %>
  'counter-display'
<% } %>
)

const buttonsClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'flex space-x-4'
<% } else { %>
  'counter-buttons'
<% } %>
)

const decrementButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'
<% } else { %>
  'counter-button decrement'
<% } %>
)

const resetButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2'
<% } else { %>
  'counter-button reset'
<% } %>
)

const incrementButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'
<% } else { %>
  'counter-button increment'
<% } %>
)

const actionsClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'flex space-x-3'
<% } else { %>
  'counter-actions'
<% } %>
)

const actionButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-3 py-1 bg-green-500 text-white text-sm rounded hover:bg-green-600 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2'
<% } else { %>
  'action-button'
<% } %>
)
</script>

<% if (!features.includes('tailwind')) { %>
<style scoped>
.counter-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  padding: 1.5rem;
  background: white;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  max-width: 20rem;
  margin: 0 auto;
}

.counter-display {
  font-size: 1.875rem;
  font-weight: bold;
  color: #111827;
}

.counter-buttons {
  display: flex;
  gap: 1rem;
}

.counter-button {
  padding: 0.5rem 1rem;
  color: white;
  border: none;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: background-color 0.2s;
  font-weight: 500;
}

.counter-button:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
}

.decrement {
  background: #ef4444;
}

.decrement:hover {
  background: #dc2626;
}

.reset {
  background: #6b7280;
}

.reset:hover {
  background: #4b5563;
}

.increment {
  background: #3b82f6;
}

.increment:hover {
  background: #2563eb;
}

.counter-actions {
  display: flex;
  gap: 0.75rem;
}

.action-button {
  padding: 0.25rem 0.75rem;
  background: #10b981;
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  font-size: 0.875rem;
  transition: background-color 0.2s;
}

.action-button:hover {
  background: #059669;
}

.action-button:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.5);
}
</style>
<% } %>
<% } else { %>
<!-- 状态管理功能未启用时的占位文件 -->
<template>
  <div :class="containerClasses">
    <div :class="displayClasses">
      计数: {{ localCount }}
    </div>
    <div :class="buttonsClasses">
      <button
        @click="localCount--"
        :class="decrementButtonClasses"
      >
        -1
      </button>
      <button
        @click="localCount = 0"
        :class="resetButtonClasses"
      >
        重置
      </button>
      <button
        @click="localCount++"
        :class="incrementButtonClasses"
      >
        +1
      </button>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, computed } from 'vue'

// 本地状态
const localCount = ref(0)

// 样式类计算属性
const containerClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'flex flex-col items-center space-y-4 p-6 bg-white rounded-lg shadow-md max-w-sm mx-auto'
<% } else { %>
  'counter-container'
<% } %>
)

const displayClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'text-2xl font-semibold text-gray-900'
<% } else { %>
  'counter-display'
<% } %>
)

const buttonsClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'flex space-x-4'
<% } else { %>
  'counter-buttons'
<% } %>
)

const decrementButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors'
<% } else { %>
  'counter-button decrement'
<% } %>
)

const resetButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors'
<% } else { %>
  'counter-button reset'
<% } %>
)

const incrementButtonClasses = computed(() => 
<% if (features.includes('tailwind')) { %>
  'px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors'
<% } else { %>
  'counter-button increment'
<% } %>
)
</script>

<% if (!features.includes('tailwind')) { %>
<style scoped>
.counter-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 1.5rem;
  background: white;
  border-radius: 0.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  max-width: 18rem;
  margin: 0 auto;
}

.counter-display {
  font-size: 1.5rem;
  font-weight: 600;
  color: #333;
}

.counter-buttons {
  display: flex;
  gap: 1rem;
}

.counter-button {
  padding: 0.5rem 1rem;
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: background-color 0.2s;
}

.decrement {
  background: #ef4444;
}

.decrement:hover {
  background: #dc2626;
}

.reset {
  background: #6b7280;
}

.reset:hover {
  background: #4b5563;
}

.increment {
  background: #3b82f6;
}

.increment:hover {
  background: #2563eb;
}
</style>
<% } %>
<% } %>